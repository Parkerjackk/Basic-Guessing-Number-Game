#include <iostream>
#include <ctime>

void PrintIntro(){
    std:: cout << "\nWelcome Traveller, if you wish to pass through these tunnels you will have to solve a series of riddles...\nAs you get further into the tunnel, the difficulty will increase, so beware!!!\n";
}
void PrintIntro1(int Difficulty){
    std:: cout << "\nYou have found yourself at a level " << Difficulty;
    std:: cout << " tunnel\nIn order to continue you must solve this code...\n\n";
}

bool PlayGame(int Difficulty, int MaxDifficulty){
  
    PrintIntro1(Difficulty);

    const int CodeA = rand()% Difficulty + Difficulty; //creates random numbers based of the difficulty of the level
    const int CodeB = rand()% Difficulty + Difficulty; // ^^
    const int CodeC = rand()% Difficulty + Difficulty; // ^^

    int CodeSum = CodeA + CodeB + CodeC; //Adds all three randomly generated numbers storing result in a variable named CodeSum
    int CodeProduct = CodeA * CodeB* CodeC; //Multiplies the randomly generate numbers storing the product in a variable named CodeProduct
    
    std:: cout << "There are 3 numbers in the code\n";
    std:: cout << "The sum of the code is: " << CodeSum << std:: endl;
    std:: cout << "The product of the code is: " << CodeProduct << std:: endl;

    int GuessA; //Player guess
    int GuessB; //^^
    int GuessC; //^^

    std:: cin >> GuessA >> GuessB >> GuessC;
    
    int PlayerGSum = GuessA + GuessB + GuessC; //Adds the numbers entered by the user storing the result in this variable
    int PlayerGProduct = GuessA * GuessB * GuessC; // Multiplies the numbers entered by the using storing the product in this variable

    if (PlayerGSum == CodeSum && PlayerGProduct == CodeProduct)//compares that both the sum and product of the number guessed are equal to those that were randomly generated by the computer
    {
        if (Difficulty < MaxDifficulty)//While the level difficulty is less than the MaxDifficulty, the following will be printed
        {
        std:: cout << "Congratulations, you solved the code!!!\nThere are " << 5 - Difficulty << " tunnels remaining\n";
        }
        else //once the max level is reached and succesfully solved, this message will be printed
        {
            std:: cout << "Congratulations, you have succefully passed through all the tunnels, safe travels!!";
        }
        return true; //Providing a true statement to the bool function bLevelComplete in order to add 1 t othe difficulty, this only occurs while the level remains <= to the MaxDifficulty
    }
    else //if the code is guessed incorrectly, the following will be printed
    {
    std:: cout << "It seems that you guess incorrectly, try again if you wish to progress through the tunnels\n";
    return false;  // returns false to the bool bLevelComplete, therefore the difficulty is not increased
    }
}



int main(){
    
    srand(time(NULL));//create new random sequence based on time of day

    int LevelDifficulty = 1; //declaring the levelDifficulty and setting it to 1
    int MaxDifficulty = 5; //declaring the maxDifficulty and setting it to 5
    PrintIntro(); //prints the introduction stored in the function
    while (LevelDifficulty <= MaxDifficulty) //while the levelDifficulty remains less than or equal to the maxDifficulty, the while loop will continue. Otherwise, it will exit the while loop returning 0 and therefore ending the program.
    {
        bool bLevelComplete = PlayGame(LevelDifficulty, MaxDifficulty);
        std::cin.clear();
        std::cin.ignore(); 

        if (bLevelComplete){
            ++LevelDifficulty;
        }
        
    }
    return 0; // exits with no error code;
}
